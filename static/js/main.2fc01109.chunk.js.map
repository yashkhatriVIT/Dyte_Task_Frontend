{"version":3,"sources":["components/Button/Button.module.css","components/Editors/style.module.css","components/Editors/HtmlEditor.js","components/Editors/CssEditor.js","components/Editors/JsEditor.js","components/Button/Button.js","components/Sidebar/SidebarData.js","components/Sidebar/Sidebar.js","components/App.js","index.js","components/Sidebar/Sidebar.module.css"],"names":["module","exports","HtmlEditor","handleChange","editor","data","value","props","onChange","className","classes","editor_container","this","view","Show","Hide","editor_title","displayName","onBeforeChange","code_mirror_wrapper","options","lineWrapping","lint","mode","language","Component","CssEditor","JsEditor","Button","style","background","color","onClick","enableView","toggle","icons","title","SidebarData","icon","cName","Sidebar","state","sidebar","ToggleSideBar","setState","prevState","createLink","request","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","alert","responseText","send","process","content","classesInNav","nav_menu","push","active","Provider","navbar","border","cursor","menu_bars","fontWeight","height","marginRight","share","nav_menu_items","map","item","ind","App","html","css","js","htmlView","cssView","jsView","EnableMyView","type","ChangeInputHandlerHTML","ChangeInputHandlerCSS","ChangeInputHandlerJS","srcDoc","HTML","CSS","JS","sandbox","frameBorder","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fc01109.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"nav_menu_items\":\"Button_nav_menu_items__2b29B\",\"navbar_toggle\":\"Button_navbar_toggle__1AlEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hide\":\"style_Hide__COOuU\",\"Show\":\"style_Show__10aJq\",\"editor_container\":\"style_editor_container__2vyyB\",\"editor_title\":\"style_editor_title__2dSco\",\"CodeMirror\":\"style_CodeMirror__2u-iq\",\"code_mirror_wrapper\":\"style_code_mirror_wrapper__3JddA\"};","import React, { Component } from 'react'\n\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\n\n// Code mirror module for html \nimport 'codemirror/mode/xml/xml'\n\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\nimport classes from './style.module.css';\nclass HtmlEditor extends Component{\n     /* \n        This function will enable and disable the current window and will show the clicked file editor\n        the function in turn will call the onChange function passed in the props \n        which will allow user to manage the view for the file to be fetched\n    */\n   handleChange = (editor, data, value) => {\n       this.props.onChange(value);\n    }\n    /* \n        This is the editor set up which we have to do, so this is HTML editor\n    */\n\n    render(){\n        return (\n            <div className = {`${classes.editor_container} ${this.props.view ? classes.Show : classes.Hide}`}>\n                <div className={classes.editor_title}>\n                    {this.props.displayName}\n                </div>\n                <ControlledEditor\n                    onBeforeChange = {this.handleChange}\n                    value = {this.props.value}\n                    className = {classes.code_mirror_wrapper}\n                    options = {{\n                        lineWrapping: true,\n                        lint: true,\n                        mode: this.props.language,\n                    }}\n                />\n            </div>            \n        );\n    }\n    \n}\n\nexport default HtmlEditor;\n","import React, { Component } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\n// Code mirror for css\nimport 'codemirror/mode/css/css'\nimport classes from './style.module.css';\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\n\nclass CssEditor extends Component{\n     /* \n        This function will enable and disable the current window and will show the clicked file editor\n        the function in turn will call the onChange function passed in the props \n        which will allow user to manage the view for the file to be fetched\n    */\n   handleChange = (editor, data, value) => {\n       this.props.onChange(value);\n    }\n    /* \n        This is the editor set up which we have to do, so this is CSS editor\n    */\n    render(){\n        return (\n            <div className = {`${classes.editor_container} ${this.props.view ? classes.Show : classes.Hide}`}>\n                <div className={classes.editor_title}>\n                    {this.props.displayName}\n                </div>\n                <ControlledEditor\n                    onBeforeChange = {this.handleChange}\n                    value = {this.props.value}\n                    className = {classes.code_mirror_wrapper}\n                    options = {{\n                        lineWrapping: true,\n                        lint: true,\n                        mode: this.props.language,\n                    }}\n                />\n            </div>            \n        );\n    }\n    \n}\nexport default CssEditor;\n","import React, { Component } from 'react'\n\n// Library used\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\n// Code mirror for js\nimport 'codemirror/mode/javascript/javascript'\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\n\n// Styling \nimport classes from './style.module.css';\n\nclass JsEditor extends Component{\n    /* \n        This function will enable and disable the current window and will show the clicked file editor\n        the function in turn will call the onChange function passed in the props \n        which will allow user to manage the view for the file to be fetched\n    */\n   handleChange = (editor, data, value) => {\n       this.props.onChange(value);\n    /* \n        This is the editor set up which we have to do, so this is JS editor\n    */\n    }\n    render(){\n        return (\n            <div className = {`${classes.editor_container} ${this.props.view ? classes.Show : classes.Hide}`}>\n                <div className={classes.editor_title}>\n                    {this.props.displayName}\n                </div>\n                <ControlledEditor\n                    onBeforeChange = {this.handleChange}\n                    value = {this.props.value}\n                    className = {classes.code_mirror_wrapper}\n                    options = {{\n                        lineWrapping: true,\n                        lint: true,\n                        mode: this.props.language,\n                    }}\n                />\n            </div>            \n        );\n    }\n    \n}\n\nexport default JsEditor\n","import classes from './Button.module.css';\n// Basic UI element to design the side bar which fetches my files\nlet Button = (props) => {\n    return(\n        <button style= {{background: 'transparent', color: 'white'}} className = {classes.Button} onClick = {()=> props.enableView(props.toggle)}>\n            {props.icons}\n            <span>{props.title}</span>\n        </button>\n    );\n    \n} \n\nexport default Button;","import React from 'react'\nimport * as IoIcons from 'react-icons/io';\n\n//  File data whcich is to be shown while displaying the files in the explorer\nconst SidebarData = [\n    {\n        title: 'index.html',\n        icon: <IoIcons.IoIosPaper />,\n        cName: 'nav_text',\n        toggle: 'html'\n\n    },\n    {\n        title: 'index.css',\n        icon: <IoIcons.IoIosPaper />,\n        cName: 'nav_text',\n        toggle: 'css'\n    },\n    {\n        title: 'index.js',\n        icon: <IoIcons.IoIosPaper />,\n        cName: 'nav_text',\n        toggle: 'js'\n    }\n];\n\nexport default SidebarData\n\n\n","import React, { Fragment, Component } from 'react';\n// external packages used\nimport * as FaIcons from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\n\n// import of local components\nimport Button from '../Button/Button';\nimport SidebarData from './SidebarData';\nimport classes from './Sidebar.module.css';\n\n\nclass Sidebar extends Component {\n    // This state for toggleing the view of sidebar\n    state = {\n        sidebar: false\n    }\n    // Function responsoble for toggleing the view of sidebar\n    ToggleSideBar = () => {\n        this.setState((prevState) => ({\n            sidebar: !prevState.sidebar\n        }));\n    }\n    /*\n        creating the link for sharing the file, the file is an JSON Paresed String\n        containing the data as {HTML: content, CSS: content, JS: content}\n        JSON string\n    */ \n    createLink = () => {\n        let request = new XMLHttpRequest();\n        // Url added to handle cors https://cors-anywhere.herokuapp.com/\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/https://pastebin.com/api/api_post.php\", true);\n        request.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        request.onreadystatechange = function() {\n            if(request.readyState === 4 && request.status === 200) {\n                // The required Link will be shown in the alert box\n                alert(`This is your sharable link ${request.responseText}`);\n            }\n        }\n        request.send(`api_dev_key=${process.env.REACT_APP_API_KEY}&api_option=paste&api_paste_private=0&api_paste_name=myname.js&api_paste_expire_date=10M&api_paste_format=javascript&api_paste_code=${this.props.content}`);\n    }\n    /* \n        Rendering the SideNavbar and Share link button which on click will\n        which will allow user to select the file to work on\n    */ \n    render() {\n        let classesInNav = [classes.nav_menu];\n        if(this.state.sidebar){\n            classesInNav.push(classes.active);\n        }\n        return (\n            <Fragment>\n                 <IconContext.Provider value={{ color: '#fff' }}>\n                    <div className={classes.navbar}>\n                        <button style= {{border: 'none',\n                        cursor: 'pointer'}}className = {classes.menu_bars}>\n                            <FaIcons.FaBars onClick = {this.ToggleSideBar}/>\n                        </button>\n                        <h2 style = {{color: 'white'}}>ALL IN ONE</h2>\n                        <button style = {{\n                            border: 'none',\n                            background: 'none',\n                            fontWeight: 'bold',\n                            color: 'white',\n                            height: '32px',\n                            marginRight: '28px'\n                        }} className = {classes.share} onClick = {this.createLink}>\n                            Share\n                        </button>\n                    </div>\n                    <nav className = {classesInNav} style = {{background: '#060b26'}}>\n                        <ul className = {classes.nav_menu_items}>\n                            {SidebarData.map((item, ind) => {\n                                return (\n                                    <li key = {ind} className = {item.cName}>\n                                         <Button {...item} view = {this.state.view} enableView = {this.props.enableView} ></Button>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </nav>\n                </IconContext.Provider>\n            </Fragment>\n        )\n    }\n}\nexport default Sidebar\n\n","import React, {Fragment, Component} from 'react';\nimport './App.css'\n\n// Local imports dfetching the editors\nimport HtmlEditor from './Editors/HtmlEditor';\nimport CssEditor from './Editors/CssEditor';\nimport JsEditor from './Editors/JsEditor';\nimport Sidebar from './Sidebar/Sidebar';\n\nclass App extends Component{\n  // State maintaing the content in the respective files and their respective views\n  state = {\n    html: '',\n    css: '', \n    js: '',\n    htmlView: false,\n    cssView: false,\n    jsView: false,\n  }\n  // The function handling the View of the selected file\n  EnableMyView = (type) => {\n    if(type === \"html\"){\n      this.setState((prevState)=> ({\n        htmlView: true,\n        cssView: false,\n        jsView: false\n      }))\n    }\n    else if(type === \"css\"){\n      if(type === \"css\"){\n        this.setState((prevState)=> ({\n          htmlView: false,\n        cssView: true,\n        jsView: false\n        }))\n      }\n    }\n    else{\n      if(type === \"js\"){\n        this.setState((prevState)=> ({\n          htmlView: false,\n          cssView: false,\n          jsView: true\n        }))\n      }\n    }\n\n  }\n  // The function Change in the html content\n  ChangeInputHandlerHTML = (value) => {\n    this.setState({\n      html: value\n    });\n  }\n  // The function Change in the css content\n  ChangeInputHandlerCSS = (value) => {\n    this.setState({\n      css: value\n    });\n  }\n  // The function Change in the js content\n  ChangeInputHandlerJS = (value) => {\n    this.setState({\n      js: value\n    });\n  }\n  render(){\n    // Doc to make the all file linked\n    let srcDoc = `\n      <html>\n        <body>${this.state.html}</body>\n        <style>${this.state.css}</style>\n        <script>${this.state.js}</script>\n      </html>\n    `;\n    // Final content to be entacted when share link is clicked\n    let content = {\n      HTML: this.state.html, \n      CSS: this.state.css, \n      JS: this.state.js\n    }\n    return (\n      <Fragment>\n        <Sidebar enableView = {this.EnableMyView} content = {content}/>\n      <div className = \"pane top-pane\">\n        {/* Options satisfying the configuration of the code editor and passing the content handler*/}\n        <HtmlEditor \n          language=\"xml\" \n          displayName=\"index.html\"\n          value = {this.state.html}\n          onChange = {this.ChangeInputHandlerHTML} \n          view = {this.state.htmlView}/>\n        <CssEditor \n          language=\"css\" \n          displayName=\"index.css\"\n          value = {this.state.css}\n          onChange = {this.ChangeInputHandlerCSS} \n          view = {this.state.cssView}/> \n          <JsEditor \n          language=\"js\" \n          displayName=\"index.js\"\n          value = {this.state.js}\n          onChange = {this.ChangeInputHandlerJS} \n          view = {this.state.jsView}/>\n      </div>\n      <div className = \"pane\">\n        {/* An iframe which showed the rendered web content */}\n        <h4>Live Window</h4>\n        <iframe \n          srcDoc = {srcDoc}\n          title=\"output\" \n          sandbox = \"allow-scripts\"\n          frameBorder = \"0\"\n          width = \"100%\"\n          height = \"100%\"/>\n      </div>\n\n    </Fragment>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Sidebar_navbar__3wHEM\",\"menu_bars\":\"Sidebar_menu_bars__1s0r-\",\"nav_menu\":\"Sidebar_nav_menu__39K46\",\"active\":\"Sidebar_active__37KeR\",\"share\":\"Sidebar_share__DOEBT\"};"],"sourceRoot":""}